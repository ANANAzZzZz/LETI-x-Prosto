plugins {
    id 'java-library'
    id 'maven-publish'
//    id 'io.franzbecker.gradle-lombok' version '1.8'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.22'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven { url "https://repo.spring.io/libs-milestone" }

}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.4.0")
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.org.jetbrains.kotlin.kotlin.reflect
    api libs.org.jetbrains.kotlin.kotlin.stdlib
    api libs.org.springframework.boot.spring.boot.starter.data.mongodb
    api libs.org.springframework.boot.spring.boot.starter.data.jpa
    api libs.org.postgresql.postgresql
    api libs.org.json.json
    api libs.io.ktor.ktor.client.core.jvm
    api libs.io.ktor.ktor.client.core
    api libs.io.ktor.ktor.client.cio
    api libs.io.ktor.ktor.client.cio.jvm
    api libs.org.jetbrains.kotlinx.kotlinx.datetime
    api libs.org.springframework.boot.spring.boot.starter.actuator
    api libs.com.googlecode.json.simple.json.simple
    api libs.mysql.mysql.connector.java
    api libs.org.springframework.boot.spring.boot.starter.freemarker
    api libs.org.springframework.boot.spring.boot.starter.mail
    api libs.org.projectlombok.lombok
    api libs.com.google.code.gson.gson
    api libs.io.ktor.ktor.client.content.negotiation.jvm
    api libs.io.ktor.ktor.serialization.jvm
    api libs.org.jetbrains.kotlinx.kotlinx.serialization.core.jvm
    api libs.io.ktor.ktor.serialization.kotlinx.json.jvm
    api libs.org.jetbrains.kotlinx.kotlinx.serialization.core
    api libs.io.ktor.ktor.client.java.jvm
    api libs.io.ktor.ktor.client.jvm
    api libs.io.ktor.ktor.serialization.gson.jvm
    api libs.org.jetbrains.annotations
    api libs.org.jetbrains.kotlinx.kotlinx.serialization.json
    api libs.org.springframework.boot.spring.boot.starter.validation
    api libs.org.jetbrains.kotlin.plugin.serialization.org.jetbrains.kotlin.plugin.serialization.gradle.plugin
    api libs.io.ktor.ktor.client.apache
}

group = 'suai.vladislav'
version = '0.0.1-SNAPSHOT'
description = 'toWorkSpring'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useTestNG()
}
